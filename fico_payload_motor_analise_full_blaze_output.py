#####################################
####### -*- coding: utf-8 -*-########
############ Versão - 1.0 ###########
#### Vivere - proposta submetidas####
##### Daniel Barreiros #####
##################################

import sys
import os
import subprocess
import traceback
from pyspark.sql import SparkSession, HiveContext
from pyspark.sql import functions as f
from pyspark.sql import types as t
from py4j.java_gateway import java_import
from sys import argv
import datetime as dt
from pyspark.sql.types import *
from datetime import datetime

processo = sys.argv[1]
#################################################
#          Fim da Classe Gerenciador            #
#################################################
#
# -------------------- INICIO IMPORT LIB ------------------
#
def carregaLib():
    _getLibs = "/data/source/lib"
    cmd = ['hdfs', 'dfs', '-get', _getLibs, '.']
    subprocess.check_output(cmd).strip().split('\n')
    sys.path.insert(0, "lib")
carregaLib()

#import Constants.Variables as var
#import Constants.Mensage as msg
import Constants.Path as path
import Dados.DadosIO as db
#import Model.fin_proposta as model
import Util.Function as ut_f
#import Config.Constants as conf

# Variável global que retorna a data atual.
current_date = dt.datetime.now().strftime('%d/%m/%Y')
print(current_date)
class Gerenciador:
    # Conexao (session) do Spark e acesso a dados
    _dados_io = None
    _spark_session = None

    # Dataframes originais
    _parametros = None

    def __init__(self, _dados_io):
        self._dados_io = _dados_io
        self._spark_session = _dados_io.spark_session()

    def gera_regras(self):
        URL = '/data/raw/FICO/PayloadAnaliseFullBlazeOutput/consolidado/{}/{}'.format( str(datetime.today().strftime('%Y%m%d')), "basepayloadanalisefullblazeoutput.csv")
        #_urlFile = self._dados_io.listFilesHDFS(URL)

        _nameDateFile = str(datetime.today().strftime('%Y%m%d'))
        _df = self._dados_io.readCsv(URL,False,";")
        #print('dados ')
        #_df.show(10);

        resultado = formata_name_colunas(_df, _nameDateFile)
        resFormat = formata_dataType_colunas(resultado)
        #resFormat.show(10)

        return resFormat

def formata_dataType_colunas(df):
    df2 = df.select(
        df['no_cpf'].cast(StringType()),
        df['no_telefone'].cast(StringType()),
        df['dt_execucao'].cast(StringType()),
        df['ds_job'].cast(StringType()),
        df['cd_session'].cast(StringType()),
        df['ds_sistema_origem'].cast(StringType()),
        df['tp_transacao'].cast(StringType()),
        df['cd_similaridadefoneticacadserasa'].cast(StringType()),
        df['cd_similaridadefoneticacadallcheck'].cast(StringType()),
        df['cd_similaridadefoneticacadtelesign'].cast(StringType()),
        df['vl_ratingfraudefull'].cast(StringType()),
        df['vl_ratingdti'].cast(StringType()),
        df['vl_ratingquod'].cast(StringType()),
        df['qtd_ratingsim'].cast(StringType()),
        df['vl_ratingfinanceira'].cast(StringType()),
        df['ds_ratingfinal'].cast(StringType()),
        df['ds_statusdecisaofull'].cast(StringType()),
        df['ds_cmasdirecionamentos'].cast(StringType()),
        df['no_apontamentogrupo1'].cast(StringType()),
        df['vl_apontamentogrupo2'].cast(StringType()),
        df['cd_apontamentogrupo3'].cast(StringType()),
        df['vl_apontamentogrupo4'].cast(StringType()),
        df['cd_apontamentogrupo5'].cast(StringType()),
        df['vl_apontamentogrupo6'].cast(StringType()),
        df['nm_apontamentogrupo7'].cast(StringType()),
        df['ds_apontamentogrupo8'].cast(StringType()),
        df['vl_apontamentogrupo9'].cast(StringType()),
        df['dt_apontamentogrupo10'].cast(StringType()),
        df['cd_reasoncodeblaze1'].cast(StringType()),
        df['cd_reasoncodeblaze2'].cast(StringType()),
        df['cd_reasoncodeblaze3'].cast(StringType()),
        df['cd_reasoncodeblaze4'].cast(StringType()),
        df['cd_reasoncodeblaze5'].cast(StringType()),
        df['cd_reasoncodeblaze6'].cast(StringType()),
        df['cd_reasoncodeblaze7'].cast(StringType()),
        df['cd_reasoncodeblaze8'].cast(StringType()),
        df['cd_reasoncodeblaze9'].cast(StringType()),
        df['cd_reasoncodeblaze10'].cast(StringType()),
        df['ds_mensagemreasoncode1'].cast(StringType()),
        df['ds_mensagemreasoncode2'].cast(StringType()),
        df['ds_mensagemreasoncode3'].cast(StringType()),
        df['ds_mensagemreasoncode4'].cast(StringType()),
        df['ds_mensagemreasoncode5'].cast(StringType()),
        df['ds_mensagemreasoncode6'].cast(StringType()),
        df['ds_mensagemreasoncode7'].cast(StringType()),
        df['ds_mensagemreasoncode8'].cast(StringType()),
        df['ds_mensagemreasoncode9'].cast(StringType()),
        df['ds_mensagemreasoncode10'].cast(StringType()),
        df['cd_vivereidproposta'].cast(StringType()),
        df['dt_viveredataproposta'].cast(StringType()),
        df['ds_viverecampanha'].cast(StringType()),
        df['ds_viverediasemanainclusao'].cast(StringType()),
        df['dt_viveretimestamprequisicao'].cast(StringType()),
        df['no_viverecpfcliente'].cast(StringType()),
        df['dt_viveredatanascimento'].cast(StringType()),
        df['dt_viveredataultimoresetsenha'].cast(StringType()),
        df['cd_viveresessionid'].cast(StringType()),
        df['cd_vivereip'].cast(StringType()),
        df['ds_viveredescricaodevice'].cast(StringType()),
        df['cd_viveregeolocalizacaodevice'].cast(StringType()),
        df['cd_financeiracodigoproduto'].cast(StringType()),
        df['tp_financeiratipopessoa'].cast(StringType()),
        df['qtd_dmpsquantidadediascarencia'].cast(StringType()),
        df['cd_financeiracodigoobjeto'].cast(StringType()),
        df['no_dmpsidade'].cast(StringType()),
        df['ds_vivereveiculomarca'].cast(StringType()),
        df['ds_vivereveiculoanomodelo'].cast(StringType()),
        df['ds_vivereveiculoanofabricacao'].cast(StringType()),
        df['ds_vivereveiculoufplaca'].cast(StringType()),
        df['ds_vivereveiculouflicenciamento'].cast(StringType()),
        df['vl_vivereveiculovalorfipe'].cast(StringType()),
        df['no_viverecedentecnpj'].cast(StringType()),
        df['vl_vivereboletovalorapagar'].cast(StringType()),
        df['dt_vivereboletodatavencimento'].cast(StringType()),
        df['ds_viverecedentebanco'].cast(StringType()),
        df['vl_viverefaturavalorapagar'].cast(StringType()),
        df['dt_viverefaturadatavencimento'].cast(StringType()),
        df['cd_viverebanco'].cast(StringType()),
        df['cd_viveresubsegmento'].cast(StringType()),
        df['cd_viveretabela'].cast(StringType()),
        df['vl_viverevalorsolicitado'].cast(StringType()),
        df['vl_viverevalorfinanciado'].cast(StringType()),
        df['vl_vivereparcela'].cast(StringType()),
        df['qtd_vivereprazo'].cast(StringType()),
        df['vl_viveretaxanominalmensal'].cast(StringType()),
        df['vl_viveretaxanominalanual'].cast(StringType()),
        df['vl_viveretaxacetmensal'].cast(StringType()),
        df['vl_viveretaxacetanual'].cast(StringType()),
        df['tp_vivereformapagamento'].cast(StringType()),
        df['dt_viveredatavencimentoselecionada'].cast(StringType()),
        df['dt_viveredatavencimentoprimeiraparcela'].cast(StringType()),
        df['tp_vivereproponentesexo'].cast(StringType()),
        df['ds_vivereproponentenaturalidadeuf'].cast(StringType()),
        df['ds_vivereproponentenaturalidadecidade'].cast(StringType()),
        df['ds_vivereproponenteprofissao'].cast(StringType()),
        df['ds_vivereproponenterenda'].cast(StringType()),
        df['cd_vivereproponentecep'].cast(StringType()),
        df['ds_vivereproponentelogradouro'].cast(StringType()),
        df['ds_vivereproponenteestado'].cast(StringType()),
        df['ds_vivereproponentecidade'].cast(StringType()),
        df['ds_vivereavalistaparentesco'].cast(StringType()),
        df['no_vivereavalistacpf'].cast(StringType()),
        df['dt_vivereavalistadatanascimento'].cast(StringType()),
        df['vl_vivereavalistarenda'].cast(StringType()),
        df['cd_vivereavalistacep'].cast(StringType()),
        df['ds_vivereavalistalogradouro'].cast(StringType()),
        df['ds_vivereavalistaestado'].cast(StringType()),
        df['ds_vivereavalistacidade'].cast(StringType()),
        df['ds_vivereocupacao1'].cast(StringType()),
        df['vl_vivererenda1'].cast(StringType()),
        df['ds_vivereocupacao2'].cast(StringType()),
        df['vl_vivererenda2'].cast(StringType()),
        df['ds_vivereocupacao3'].cast(StringType()),
        df['vl_vivererenda3'].cast(StringType()),
        df['ds_vivereocupacao4'].cast(StringType()),
        df['vl_vivererenda4'].cast(StringType()),
        df['ds_vivereocupacao5'].cast(StringType()),
        df['vl_vivererenda5'].cast(StringType()),
        df['nm_viverenomeempresa'].cast(StringType()),
        df['dt_viveredataadmissao'].cast(StringType()),
        df['no_viverecnpj'].cast(StringType()),
        df['cd_viverefonterendacep'].cast(StringType()),
        df['ds_viverefonterendaestado'].cast(StringType()),
        df['ds_viverefonterendacidade'].cast(StringType()),
        df['cd_financeirarepesc'].cast(StringType()),
        df['cd_financeiracdtqtdpefinres6mcli'].cast(StringType()),
        df['cd_financeiracdtqtdpefinres12mcli'].cast(StringType()),
        df['qtd_financeiraqtdocoatvserasacli'].cast(StringType()),
        df['tmp_financeiratmpocoatvnegmreccli'].cast(StringType()),
        df['tmp_financeiratmpocoresnegmreccli'].cast(StringType()),
        df['qtd_financeiraqtdocoacm1d12mcli'].cast(StringType()),
        df['cd_financeiracdtqtdocoacm90d12mcli'].cast(StringType()),
        df['vl_financeiravlrmaxoconeg12mcli'].cast(StringType()),
        df['tmp_financeiracdttmpoconegrec12mcli'].cast(StringType()),
        df['vl_financeiracdtvlrtotoconeg12mcli'].cast(StringType()),
        df['tmp_financeiracdttmpmdrressccf12mcli'].cast(StringType()),
        df['qtd_financeiracdtqtdccfatv12mcli'].cast(StringType()),
        df['qtd_financeiracdtqtdccfres12mcli'].cast(StringType()),
        df['qtd_financeiracdtqtdccfatvcli'].cast(StringType()),
        df['qtd_financeiracdtqtdacoesres12mcli'].cast(StringType()),
        df['qtd_financeiracdtqtdrefinatvcli'].cast(StringType()),
        df['qtd_financeiracdtqtdrefinatv12mcli'].cast(StringType()),
        df['qtd_financeiracdtqtdrefinres6mcli'].cast(StringType()),
        df['qtd_financeiracdtqtdrefinres12mcli'].cast(StringType()),
        df['qtd_financeiracdtqtdpefinatvcli'].cast(StringType()),
        df['qtd_financeiraqtdpefinatv12mcli'].cast(StringType()),
        df['qtd_financeiraqtdproatvcli'].cast(StringType()),
        df['qtd_financeiraqtdprores12mcli'].cast(StringType()),
        df['qtd_financeiraqtdrestatvres12mcli'].cast(StringType()),
        df['qtd_financeiraqtdacoesatvcli'].cast(StringType()),
        df['cd_financeiracdticconsultacaduscli'].cast(StringType()),
        df['cd_financeiracdtcdexperabn'].cast(StringType()),
        df['cd_financeiracdtcdexperabnav1'].cast(StringType()),
        df['cd_financeiracdtqtusocpf'].cast(StringType()),
        df['cd_financeiracdtcdcrb'].cast(StringType()),
        df['cd_financeiracdtcdcrbav1'].cast(StringType()),
        df['cd_financeiracdtratingclassif'].cast(StringType()),
        df['cd_financeiracdtratingclassifav1'].cast(StringType()),
        df['cd_financeiracdtserasaclassif'].cast(StringType()),
        df['cd_financeiracdtserasaclassifav1'].cast(StringType()),
        df['cd_financeiracdtsitcpfcnpjrec'].cast(StringType()),
        df['cd_financeiracdtsitcpfcnpjrecav1'].cast(StringType()),
        df['cd_financeiracdtlistareal'].cast(StringType()),
        df['cd_financeiracdtlistarealav1'].cast(StringType()),
        df['cd_financeiracdtqtdiasmaioratraso'].cast(StringType()),
        df['cd_financeiracdtcdvarlivrethcli'].cast(StringType()),
        df['cd_financeiracdtlistaaymore'].cast(StringType()),
        df['cd_financeiracdtlistaaymoreav1'].cast(StringType()),
        df['cd_financeiracdtcdclassifcli'].cast(StringType()),
        df['cd_financeiracdtcdclassficcliav1'].cast(StringType()),
        df['cd_financeiracdtcdgrauseveridadecli'].cast(StringType()),
        df['cd_financeiracdtcdgrauseveridadeav1'].cast(StringType()),
        df['cd_financeiracdtcl03cli'].cast(StringType()),
        df['cd_financeiracdtcl04cli'].cast(StringType()),
        df['cd_financeiracdtcl05cli'].cast(StringType()),
        df['cd_financeiracdtcl06cli'].cast(StringType()),
        df['cd_financeiracdtcl07cli'].cast(StringType()),
        df['cd_financeiracdtab01cli'].cast(StringType()),
        df['cd_financeiracdtab02cli'].cast(StringType()),
        df['cd_financeiracdtab03cli'].cast(StringType()),
        df['cd_financeiracdtab04cli'].cast(StringType()),
        df['cd_financeiracdtab05cli'].cast(StringType()),
        df['cd_financeiracdtab06cli'].cast(StringType()),
        df['cd_financeiracdtab07cli'].cast(StringType()),
        df['cd_financeiracdtab08cli'].cast(StringType()),
        df['cd_financeiracdtab09cli'].cast(StringType()),
        df['cd_financeiracdtab10cli'].cast(StringType()),
        df['cd_financeiracdtab11cli'].cast(StringType()),
        df['cd_financeiracdtab12cli'].cast(StringType()),
        df['cd_financeiracdtab13cli'].cast(StringType()),
        df['cd_financeiracdtab14cli'].cast(StringType()),
        df['cd_financeiracdtab15cli'].cast(StringType()),
        df['cd_financeiracdtae01cli'].cast(StringType()),
        df['cd_financeiracdtae02cli'].cast(StringType()),
        df['cd_financeiracdtae03cli'].cast(StringType()),
        df['cd_financeiracdtae04cli'].cast(StringType()),
        df['cd_financeiracdtae05cli'].cast(StringType()),
        df['cd_financeiracdtae06cli'].cast(StringType()),
        df['cd_financeiracdtae07cli'].cast(StringType()),
        df['cd_financeiracdtae08cli'].cast(StringType()),
        df['cd_financeiracdtae09cli'].cast(StringType()),
        df['cd_financeiracdtae10cli'].cast(StringType()),
        df['cd_financeiracdtao01cli'].cast(StringType()),
        df['cd_financeiracdtao02cli'].cast(StringType()),
        df['cd_financeiracdtstconsultactpcli'].cast(StringType()),
        df['cd_financeiracdticpossuiveiccli'].cast(StringType()),
        df['vl_financeiracdtvlgarmedveictotcli'].cast(StringType()),
        df['vl_financeiracdtvlmedveicquihstcli'].cast(StringType()),
        df['cd_financeiracdtidmediaveicadqcli'].cast(StringType()),
        df['tp_financeiracdttpultalienacaocli'].cast(StringType()),
        df['qtd_financeiracdtqttotveicquicli'].cast(StringType()),
        df['qtd_financeiracdtqtveicatufincli'].cast(StringType()),
        df['qtd_financeiracdtqtveicatuaiscli'].cast(StringType()),
        df['qtd_financeiracdtqtveichistcli'].cast(StringType()),
        df['cd_financeiracdticveicfincli'].cast(StringType()),
        df['cd_financeiracdticveic2fincli'].cast(StringType()),
        df['cd_financeiracdticveicatuhstcli'].cast(StringType()),
        df['cd_financeiracdticveic2atuhstcli'].cast(StringType()),
        df['cd_financeiracdticveic3atuhstcli'].cast(StringType()),
        df['cd_financeiracdticfinativquicli'].cast(StringType()),
        df['cd_financeiracdticfin2ativquicli'].cast(StringType()),
        df['cd_financeiracdticfin3ativquicli'].cast(StringType()),
        df['qtd_financeiracdtqtprazo1decorrcli'].cast(StringType()),
        df['qtd_financeiracdtqtprazo2decorrcli'].cast(StringType()),
        df['qtd_financeiracdtqtprazo3decorrcli'].cast(StringType()),
        df['fl_fraudehist'].cast(StringType()),
        df['fl_func'].cast(StringType()),
        df['fl_monoprodutista'].cast(StringType()),
        df['fl_correntista'].cast(StringType()),
        df['fl_vinculocc'].cast(StringType()),
        df['fl_possuictrsim'].cast(StringType()),
        df['fl_rendabalde'].cast(StringType()),
        df['fl_nivelconfianca'].cast(StringType()),
        df['fl_pap'].cast(StringType()),
        df['fl_cupom'].cast(StringType()),
        df['fl_publico'].cast(StringType()),
        df['fl_preratingsimpem'].cast(StringType()),
        df['fl_possuiautoquitado'].cast(StringType()),
        df['fl_possuimotoquitado'].cast(StringType()),
        df['fl_ccvlrinvestimento'].cast(StringType()),
        df['fl_ccsegmentacaoprimaria'].cast(StringType()),
        df['fl_ccsegmentacaosecundaria'].cast(StringType()),
        df['fl_qtddiasatrasocontratosim'].cast(StringType()),
        df['fl_negadoult30diassim'].cast(StringType()),
        df['fl_saldointernocartao'].cast(StringType()),
        df['fl_saldointernocheque'].cast(StringType()),
        df['fl_saldointernocp'].cast(StringType()),
        df['fl_saldointernoreneg'].cast(StringType()),
        df['fl_cadusqtderestrativcli'].cast(StringType()),
        df['fl_cadusvlrtotalrestrativcli'].cast(StringType()),
        df['fl_pem01'].cast(StringType()),
        df['fl_pem02'].cast(StringType()),
        df['fl_pem03'].cast(StringType()),
        df['fl_pem04'].cast(StringType()),
        df['fl_pem05'].cast(StringType()),
        df['fl_pem06'].cast(StringType()),
        df['fl_pem07'].cast(StringType()),
        df['fl_pem08'].cast(StringType()),
        df['fl_pem09'].cast(StringType()),
        df['fl_pem10'].cast(StringType()),
        df['cd_clearsaleid'].cast(StringType()),
        df['qtd_clearsalescoredti'].cast(StringType()),
        df['qtd_clearsaledigital'].cast(StringType()),
        df['qtd_serasascorescdb'].cast(StringType()),
        df['qtd_serasascorescdj '].cast(StringType()),
        df['qtd_serasascorecsdk'].cast(StringType()),
        df['fl_serasanegativospc'].cast(StringType()),
        df['cd_serasamosaic'].cast(StringType()),
        df['qtd_serasaduploscorecsbz'].cast(StringType()),
        df['cd_serasacodigoprofissao'].cast(StringType()),
        df['serasaAffordability'].cast(StringType()),
        df['vl_serasarendapro'].cast(StringType()),
        df['cd_serasaconfiabilidaderegra'].cast(StringType()),
        df['qtd_quodscore'].cast(StringType()),
        df['quodSegmento'].cast(StringType()),
        df['ds_emailagescoreea'].cast(StringType()),
        df['ds_emailagescoreclearsale'].cast(StringType()),
        df['qtd_threatmetrixpolicyscore'].cast(StringType()),
        df['cd_threatmetrixreasoncode'].cast(StringType()),
        df['qtd_threatmetrixriskrating'].cast(StringType()),
        df['st_threatmetrixreviewstatus'].cast(StringType()),
        df['cd_serasacai5'].cast(StringType()),
        df['cd_serasacai6'].cast(StringType()),
        df['cd_serasacai7'].cast(StringType()),
        df['cd_serasacai8'].cast(StringType()),
        df['cd_serasacalgcai9'].cast(StringType()),
        df['serasaAlertaNegocios'].cast(StringType()),
        df['serasaLogradouro'].cast(StringType()),
        df['allCheckLogradouro'].cast(StringType()),
        df['telesineLogradouro '].cast(StringType()),
        df['nm_regra'].cast(StringType()),
        df['mensagem'].cast(StringType()),
        df['dt_carga'].cast(StringType())
        )

    return df2


def formata_name_colunas(_df, data_arquivo):
    colunas = {
        1: 'no_cpf',
        2: 'no_telefone',
        3: 'dt_execucao',
        4: 'ds_job',
        5: 'cd_session',
        6: 'ds_sistema_origem',
        7: 'tp_transacao',
        8: 'cd_similaridadefoneticacadserasa',
        9: 'cd_similaridadefoneticacadallcheck',
        10: 'cd_similaridadefoneticacadtelesign',
        11: 'vl_ratingfraudefull',
        12: 'vl_ratingdti',
        13: 'vl_ratingquod',
        14: 'qtd_ratingsim',
        15: 'vl_ratingfinanceira',
        16: 'ds_ratingfinal',
        17: 'ds_statusdecisaofull',
        18: 'ds_cmasdirecionamentos',
        19: 'no_apontamentogrupo1',
        20: 'vl_apontamentogrupo2',
        21: 'cd_apontamentogrupo3',
        22: 'vl_apontamentogrupo4',
        23: 'cd_apontamentogrupo5',
        24: 'vl_apontamentogrupo6',
        25: 'nm_apontamentogrupo7',
        26: 'ds_apontamentogrupo8',
        27: 'vl_apontamentogrupo9',
        28: 'dt_apontamentogrupo10',
        29: 'cd_reasoncodeblaze1',
        30: 'cd_reasoncodeblaze2',
        31: 'cd_reasoncodeblaze3',
        32: 'cd_reasoncodeblaze4',
        33: 'cd_reasoncodeblaze5',
        34: 'cd_reasoncodeblaze6',
        35: 'cd_reasoncodeblaze7',
        36: 'cd_reasoncodeblaze8',
        37: 'cd_reasoncodeblaze9',
        38: 'cd_reasoncodeblaze10',
        39: 'ds_mensagemreasoncode1',
        40: 'ds_mensagemreasoncode2',
        41: 'ds_mensagemreasoncode3',
        42: 'ds_mensagemreasoncode4',
        43: 'ds_mensagemreasoncode5',
        44: 'ds_mensagemreasoncode6',
        45: 'ds_mensagemreasoncode7',
        46: 'ds_mensagemreasoncode8',
        47: 'ds_mensagemreasoncode9',
        48: 'ds_mensagemreasoncode10',
        49: 'cd_vivereidproposta',
        50: 'dt_viveredataproposta',
        51: 'ds_viverecampanha',
        52: 'ds_viverediasemanainclusao',
        53: 'dt_viveretimestamprequisicao',
        54: 'no_viverecpfcliente',
        55: 'dt_viveredatanascimento',
        56: 'dt_viveredataultimoresetsenha',
        57: 'cd_viveresessionid',
        58: 'cd_vivereip',
        59: 'ds_viveredescricaodevice',
        60: 'cd_viveregeolocalizacaodevice',
        61: 'cd_financeiracodigoproduto',
        62: 'tp_financeiratipopessoa',
        63: 'qtd_dmpsquantidadediascarencia',
        64: 'cd_financeiracodigoobjeto',
        65: 'no_dmpsidade',
        66: 'ds_vivereveiculomarca',
        67: 'ds_vivereveiculoanomodelo',
        68: 'ds_vivereveiculoanofabricacao',
        69: 'ds_vivereveiculoufplaca',
        70: 'ds_vivereveiculouflicenciamento',
        71: 'vl_vivereveiculovalorfipe',
        72: 'no_viverecedentecnpj',
        73: 'vl_vivereboletovalorapagar',
        74: 'dt_vivereboletodatavencimento',
        75: 'ds_viverecedentebanco',
        76: 'vl_viverefaturavalorapagar',
        77: 'dt_viverefaturadatavencimento',
        78: 'cd_viverebanco',
        79: 'cd_viveresubsegmento',
        80: 'cd_viveretabela',
        81: 'vl_viverevalorsolicitado',
        82: 'vl_viverevalorfinanciado',
        83: 'vl_vivereparcela',
        84: 'qtd_vivereprazo',
        85: 'vl_viveretaxanominalmensal',
        86: 'vl_viveretaxanominalanual',
        87: 'vl_viveretaxacetmensal',
        88: 'vl_viveretaxacetanual',
        89: 'tp_vivereformapagamento',
        90: 'dt_viveredatavencimentoselecionada',
        91: 'dt_viveredatavencimentoprimeiraparcela',
        92: 'tp_vivereproponentesexo',
        93: 'ds_vivereproponentenaturalidadeuf',
        94: 'ds_vivereproponentenaturalidadecidade',
        95: 'ds_vivereproponenteprofissao',
        96: 'ds_vivereproponenterenda',
        97: 'cd_vivereproponentecep',
        98: 'ds_vivereproponentelogradouro',
        99: 'ds_vivereproponenteestado',
        100: 'ds_vivereproponentecidade',
        101: 'ds_vivereavalistaparentesco',
        102: 'no_vivereavalistacpf',
        103: 'dt_vivereavalistadatanascimento',
        104: 'vl_vivereavalistarenda',
        105: 'cd_vivereavalistacep',
        106: 'ds_vivereavalistalogradouro',
        107: 'ds_vivereavalistaestado',
        108: 'ds_vivereavalistacidade',
        109: 'ds_vivereocupacao1',
        110: 'vl_vivererenda1',
        111: 'ds_vivereocupacao2',
        112: 'vl_vivererenda2',
        113: 'ds_vivereocupacao3',
        114: 'vl_vivererenda3',
        115: 'ds_vivereocupacao4',
        116: 'vl_vivererenda4',
        117: 'ds_vivereocupacao5',
        118: 'vl_vivererenda5',
        119: 'nm_viverenomeempresa',
        120: 'dt_viveredataadmissao',
        121: 'no_viverecnpj',
        122: 'cd_viverefonterendacep',
        123: 'ds_viverefonterendaestado',
        124: 'ds_viverefonterendacidade',
        125: 'cd_financeirarepesc',
        126: 'cd_financeiracdtqtdpefinres6mcli',
        127: 'cd_financeiracdtqtdpefinres12mcli',
        128: 'qtd_financeiraqtdocoatvserasacli',
        129: 'tmp_financeiratmpocoatvnegmreccli',
        130: 'tmp_financeiratmpocoresnegmreccli',
        131: 'qtd_financeiraqtdocoacm1d12mcli',
        132: 'cd_financeiracdtqtdocoacm90d12mcli',
        133: 'vl_financeiravlrmaxoconeg12mcli',
        134: 'tmp_financeiracdttmpoconegrec12mcli',
        135: 'vl_financeiracdtvlrtotoconeg12mcli',
        136: 'tmp_financeiracdttmpmdrressccf12mcli',
        137: 'qtd_financeiracdtqtdccfatv12mcli',
        138: 'qtd_financeiracdtqtdccfres12mcli',
        139: 'qtd_financeiracdtqtdccfatvcli',
        140: 'qtd_financeiracdtqtdacoesres12mcli',
        141: 'qtd_financeiracdtqtdrefinatvcli',
        142: 'qtd_financeiracdtqtdrefinatv12mcli',
        143: 'qtd_financeiracdtqtdrefinres6mcli',
        144: 'qtd_financeiracdtqtdrefinres12mcli',
        145: 'qtd_financeiracdtqtdpefinatvcli',
        146: 'qtd_financeiraqtdpefinatv12mcli',
        147: 'qtd_financeiraqtdproatvcli',
        148: 'qtd_financeiraqtdprores12mcli',
        149: 'qtd_financeiraqtdrestatvres12mcli',
        150: 'qtd_financeiraqtdacoesatvcli',
        151: 'cd_financeiracdticconsultacaduscli',
        152: 'cd_financeiracdtcdexperabn',
        153: 'cd_financeiracdtcdexperabnav1',
        154: 'cd_financeiracdtqtusocpf',
        155: 'cd_financeiracdtcdcrb',
        156: 'cd_financeiracdtcdcrbav1',
        157: 'cd_financeiracdtratingclassif',
        158: 'cd_financeiracdtratingclassifav1',
        159: 'cd_financeiracdtserasaclassif',
        160: 'cd_financeiracdtserasaclassifav1',
        161: 'cd_financeiracdtsitcpfcnpjrec',
        162: 'cd_financeiracdtsitcpfcnpjrecav1',
        163: 'cd_financeiracdtlistareal',
        164: 'cd_financeiracdtlistarealav1',
        165: 'cd_financeiracdtqtdiasmaioratraso',
        166: 'cd_financeiracdtcdvarlivrethcli',
        167: 'cd_financeiracdtlistaaymore',
        168: 'cd_financeiracdtlistaaymoreav1',
        169: 'cd_financeiracdtcdclassifcli',
        170: 'cd_financeiracdtcdclassficcliav1',
        171: 'cd_financeiracdtcdgrauseveridadecli',
        172: 'cd_financeiracdtcdgrauseveridadeav1',
        173: 'cd_financeiracdtcl03cli',
        174: 'cd_financeiracdtcl04cli',
        175: 'cd_financeiracdtcl05cli',
        176: 'cd_financeiracdtcl06cli',
        177: 'cd_financeiracdtcl07cli',
        178: 'cd_financeiracdtab01cli',
        179: 'cd_financeiracdtab02cli',
        180: 'cd_financeiracdtab03cli',
        181: 'cd_financeiracdtab04cli',
        182: 'cd_financeiracdtab05cli',
        183: 'cd_financeiracdtab06cli',
        184: 'cd_financeiracdtab07cli',
        185: 'cd_financeiracdtab08cli',
        186: 'cd_financeiracdtab09cli',
        187: 'cd_financeiracdtab10cli',
        188: 'cd_financeiracdtab11cli',
        189: 'cd_financeiracdtab12cli',
        190: 'cd_financeiracdtab13cli',
        191: 'cd_financeiracdtab14cli',
        192: 'cd_financeiracdtab15cli',
        193: 'cd_financeiracdtae01cli',
        194: 'cd_financeiracdtae02cli',
        195: 'cd_financeiracdtae03cli',
        196: 'cd_financeiracdtae04cli',
        197: 'cd_financeiracdtae05cli',
        198: 'cd_financeiracdtae06cli',
        199: 'cd_financeiracdtae07cli',
        200: 'cd_financeiracdtae08cli',
        201: 'cd_financeiracdtae09cli',
        202: 'cd_financeiracdtae10cli',
        203: 'cd_financeiracdtao01cli',
        204: 'cd_financeiracdtao02cli',
        205: 'cd_financeiracdtstconsultactpcli',
        206: 'cd_financeiracdticpossuiveiccli',
        207: 'vl_financeiracdtvlgarmedveictotcli',
        208: 'vl_financeiracdtvlmedveicquihstcli',
        209: 'cd_financeiracdtidmediaveicadqcli',
        210: 'tp_financeiracdttpultalienacaocli',
        211: 'qtd_financeiracdtqttotveicquicli',
        212: 'qtd_financeiracdtqtveicatufincli',
        213: 'qtd_financeiracdtqtveicatuaiscli',
        214: 'qtd_financeiracdtqtveichistcli',
        215: 'cd_financeiracdticveicfincli',
        216: 'cd_financeiracdticveic2fincli',
        217: 'cd_financeiracdticveicatuhstcli',
        218: 'cd_financeiracdticveic2atuhstcli',
        219: 'cd_financeiracdticveic3atuhstcli',
        220: 'cd_financeiracdticfinativquicli',
        221: 'cd_financeiracdticfin2ativquicli',
        222: 'cd_financeiracdticfin3ativquicli',
        223: 'qtd_financeiracdtqtprazo1decorrcli',
        224: 'qtd_financeiracdtqtprazo2decorrcli',
        225: 'qtd_financeiracdtqtprazo3decorrcli',
        226: 'fl_fraudehist',
        227: 'fl_func',
        228: 'fl_monoprodutista',
        229: 'fl_correntista',
        230: 'fl_vinculocc',
        231: 'fl_possuictrsim',
        232: 'fl_rendabalde',
        233: 'fl_nivelconfianca',
        234: 'fl_pap',
        235: 'fl_cupom',
        236: 'fl_publico',
        237: 'fl_preratingsimpem',
        238: 'fl_possuiautoquitado',
        239: 'fl_possuimotoquitado',
        240: 'fl_ccvlrinvestimento',
        241: 'fl_ccsegmentacaoprimaria',
        242: 'fl_ccsegmentacaosecundaria',
        243: 'fl_qtddiasatrasocontratosim',
        244: 'fl_negadoult30diassim',
        245: 'fl_saldointernocartao',
        246: 'fl_saldointernocheque',
        247: 'fl_saldointernocp',
        248: 'fl_saldointernoreneg',
        249: 'fl_cadusqtderestrativcli',
        250: 'fl_cadusvlrtotalrestrativcli',
        251: 'fl_pem01',
        252: 'fl_pem02',
        253: 'fl_pem03',
        254: 'fl_pem04',
        255: 'fl_pem05',
        256: 'fl_pem06',
        257: 'fl_pem07',
        258: 'fl_pem08',
        259: 'fl_pem09',
        260: 'fl_pem10',
        261: 'cd_clearsaleid',
        262: 'qtd_clearsalescoredti',
        263: 'qtd_clearsaledigital',
        264: 'qtd_serasascorescdb',
        265: 'qtd_serasascorescdj ',
        266: 'qtd_serasascorecsdk',
        267: 'fl_serasanegativospc',
        268: 'cd_serasamosaic',
        269: 'qtd_serasaduploscorecsbz',
        270: 'cd_serasacodigoprofissao',
        271: 'serasaAffordability',
        272: 'vl_serasarendapro',
        273: 'cd_serasaconfiabilidaderegra',
        274: 'qtd_quodscore',
        275: 'quodSegmento',
        276: 'ds_emailagescoreea',
        277: 'ds_emailagescoreclearsale',
        278: 'qtd_threatmetrixpolicyscore',
        279: 'cd_threatmetrixreasoncode',
        280: 'qtd_threatmetrixriskrating',
        281: 'st_threatmetrixreviewstatus',
        282: 'cd_serasacai5',
        283: 'cd_serasacai6',
        284: 'cd_serasacai7',
        285: 'cd_serasacai8',
        286: 'cd_serasacalgcai9',
        287: 'serasaAlertaNegocios',
        288: 'serasaLogradouro',
        289: 'allCheckLogradouro',
        290: 'telesineLogradouro ',
        291: 'nm_regra',
        292: 'mensagem'
    }
    cont = 1
    #print " df show"
    #_df.show()
    for col in _df.columns:
        #print "col {}, colunas[cont] {}, count {}".format(col, colunas[cont],cont)
        _df = _df.withColumnRenamed(col, colunas[cont])

        cont = cont + 1
    _df = _df.withColumn('dt_carga', f.lit(str(data_arquivo)))
    return _df


#################################################
#          Inicio da execução do código         #
#################################################

print ('Inicio')
df3 = None
dt_inicio = str(datetime.today().strftime('%Y-%m-%d %H:%M:%S'))
fmt = '%Y-%m-%d %H:%M:%S'
d1 = datetime.strptime(dt_inicio, fmt)
_dados_io = db.DadosIO('RED_FICO_PAYLOAD_MOTOR_ANALISE_FULL_BLAZE_OUTPUT')
_gerenciador = Gerenciador(_dados_io)
_df = _gerenciador.gera_regras()

try:
    print ('gravacao')
    _tabela_hive = 'harmonized.h_fico_payload_analisefull_blaze_output'
    _dados_io.gravar_parquet_insert_table(_df, _tabela_hive)

except Exception as ex:
    df3 = 'ERRO: {} Erro trace {}'.format(str(ex),traceback.print_exc())
    print df3
else:
    df3 = ("succeeded")
finally:
    dt_fim = str(datetime.today().strftime('%Y-%m-%d %H:%M:%S'))
    d2 = datetime.strptime(dt_fim, fmt)
    diff = d2 - d1
    tempoexec = str(diff)

    ut_f.gera_log_execucao(processo, dt_inicio, dt_fim, tempoexec, df3)

